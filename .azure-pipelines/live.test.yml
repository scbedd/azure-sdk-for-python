# Variables: 
#  'build_targeting_string' comma separated glob strings selecting the packages that should be built. EG: "azure-keyvault,azure-mgmt-batch" or "azure-*"
jobs:
  strategy:
    matrix:
      Python_27:
        python.version: '2.7'
        vm.image: 'ubuntu-16.04'
      Python_36:
        python.version: '3.6'
        vm.image: 'macOS-10.13'
      Python_37:
        python.version: '3.7'
        vm.image: 'vs2017-win2016'
- job: ${{ format('Test_{0}_on_{1}', '$(python.version)', '$(vm.image)') }}
  pool:
    vmImage: '$(vm.image)'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(python.version)'
    inputs:
      versionSpec: '$(python.version)'
  - powershell: |
     $inputFilterSet="$(build_targeting_string)"
     
     if ($inputFilterSet -eq "")
     {
        $inputFilterSet = "azure-*"
     }
     
     foreach($inputFilter in $inputFilterSet.split(","))
     {
        python scripts/dev_setup.py -g $inputFilter
     }
    displayName: 'Test Setup'
  - powershell: |
     $inputFilterSet="$(build_targeting_string)"
     
     if ($inputFilterSet -eq "")
     {
        $inputFilterSet = "azure-*"
     }
     
     foreach($inputFilter in $inputFilterSet.split(","))
     {
        $folderCombination = (gci -Directory -Name -Filter "$inputFilter"  | %{ "$(Build.SourcesDirectory)/$_/" }) -join " "
        pytest $folderCombination
     }
    displayName: 'Run Test Subset'
    env:
      SERVICE_BUS_HOSTNAME: $(sb-livetest-service-bus-hostname)
      SERVICE_BUS_SAS_POLICY: $(sb-livetest-service-sas-policy)
      SERVICE_BUS_SAS_KEY: $(sb-livetest-service-sas-key)
      SERVICE_BUS_CONNECTION_STR: $(sb-livetest-service-connection-str)
      SERVICE_BUS_CONNECTION_STR_RO: $(sb-livetest-service-connection-str-ro)
      SERVICE_BUS_CONNECTION_STR_WO: $(sb-livetest-service-connection-str-wo)
      SERVICE_BUS_CONNECTION_STR_ENTITY: $(sb-livetest-service-connection-entity)