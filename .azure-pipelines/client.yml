# Variables: 
#  'build_targeting_string' comma separated glob strings selecting the packages that should be built. EG: "azure-keyvault,azure-mgmt-batch" or "azure-*"
#  'codecov-python-repository-token' Is the codecov.io repository token.
#  'long_running_tests' Is a boolean indicating that the long-running tests should be executed. 

trigger:
- master

variables:
  PythonVersion: '3.6'

jobs:
- job: 'Analyze'
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(PythonVersion)'
    inputs:
      versionSpec: '$(PythonVersion)'

  - script: |
     pip install wheel Jinja2
    displayName: 'Prep Environment'

    # sudo is required for pip install, as a console_entrypoint shim needs to be placed in bin
  - script: |
      pip install setuptools wheel
      sudo pip3 install doc-warden
      ward scan -d $(Build.SourcesDirectory)
    displayName: 'Verify Readmes'

  - task: PythonScript@0
    displayName: 'Analyze dependencies'
    enabled: true
    inputs:
      scriptPath: 'scripts/analyze_deps.py'
      arguments: '--verbose --out "$(Build.ArtifactStagingDirectory)/dependencies.html"'

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    # ComponentGovernance is currently unable to run on pull requests of public projects. Running on non-PR
    # builds should be sufficient.
    condition: and(succeededOrFailed(), ne(variables['Build.Reason'],'PullRequest'))
    displayName: 'Component Detection'

  - task: PublishBuildArtifacts@1
    # To Publish artifacts generated by the 'Analyze dependencies' task under 'Analyze' job
    displayName: 'Publish Artifacts'
    condition: succeededOrFailed()
